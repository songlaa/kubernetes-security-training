<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>1. Basics on Kubernetes Security Training</title><link>/docs/kubernetes-basics/01-basics/</link><description>Recent content in 1. Basics on Kubernetes Security Training</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="/docs/kubernetes-basics/01-basics/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>/docs/kubernetes-basics/01-basics/01/_introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/kubernetes-basics/01-basics/01/_introduction/</guid><description>All explanations and resources used in this lab give only a quick and not detailed overview. Please check the official documentation to get further details.
Core concepts With the open source software Kubernetes, you get a platform to deploy your application in a container and operate it at the same time. Therefore, Kubernetes is also called a Container Platform, or the term Container-as-a-Service (CaaS) is used.
Depending on the configuration the term Platform-as-a-Service (PaaS) works as well.</description></item><item><title>Deployments</title><link>/docs/kubernetes-basics/01-basics/01/_deployments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/kubernetes-basics/01-basics/01/_deployments/</guid><description>We are finally ready to get started with Kubernetes. You should have been given the setup instrutions by your teacher and be logged in your own namespace.
In this lab, we are going to deploy our first container image and look at the concepts of Pods, Services, and Deployments.
Task 1.2.1: Start and stop a single Pod We are going to have a look at deploying a pre-built container image from Quay.</description></item><item><title>Exposing a service</title><link>/docs/kubernetes-basics/01-basics/01/_service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/kubernetes-basics/01-basics/01/_service/</guid><description>In this lab, we are going to make the frontend from the last lab available online.
Task 1.3.1: Create a ClusterIP Service The command kubectl apply -f deployment_example-frontend.yaml from the last lab creates a Deployment but no Service.
A kubernetes Service is an abstract way to expose an application running on a set of Pods as a network service. For some parts of your application (for example, frontends) you may want to expose a Service to an external IP address which is outside your cluster.</description></item><item><title>Backend</title><link>/docs/kubernetes-basics/01-basics/01/_database/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/kubernetes-basics/01-basics/01/_database/</guid><description>Numerous applications are stateful in some way and want to save data persistently, be it in a database, as files on a filesystem or in an object store. In this lab, we are going to create a MariaDB database and configure our application to store its data in it.
Task 1.4.1: Instantiate a MariaDB database We are first going to create a so-called Secret in which we store sensitive data. The secret will be used to access the database and also to create the initial database.</description></item><item><title>Securing the frontend</title><link>/docs/kubernetes-basics/01-basics/01/_sec-frontend/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/kubernetes-basics/01-basics/01/_sec-frontend/</guid><description>Right now we have a fully functioning application, but we wan&amp;rsquo;t to run it a secure as possible. In docker we would make sure to run as an unprivileged user, drop unnecessary capabilites and use a Mandatory Access Control System like AppArmor. Let us apply that to Kubernetes!
In Kubernetes, the SecurityContext defines security-related settings for both Pods and individual Containers. It allows you to control various security aspects of your workloads, such as user permissions, capabilities, and Linux security features (like SELinux, AppArmor, and seccomp).</description></item></channel></rss>